server:
  port: 31200
spring:
  application:
    name: onlineEducation-course
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/oe_course?characterEncoding=utf-8
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      #初始建立连接数量
      initialSize: 5
      #最小连接数量
      minIdle: 5
      #最大连接数量
      maxActive: 20
      #获取连接最大等待时间，毫秒
      maxWait: 10000
      #申请连接时检测连接是否有效
      testOnBorrow: true
      #归还连接时检测连接是否有效
      testOnReturn: false
      #配置间隔检测连接是否有效的时间（单位是毫秒）
      timeBetweenEvictionRunsMillis: 60000
      #连接在连接池的最小生存时间（毫秒）
      minEvictableIdleTimeMillis: 300000

mybatis:
  mapper-locations: classpath:com.gly.manager.course.dao/*.xml
  type-aliases-package: com.gly.common.model.course
  configuration:
    map-underscore-to-camel-case: true

pagehelper:
  helper-dialect: mysql

eureka:
  client:
    #服务注册开关
    registerWithEureka: true
    #服务发现开关
    fetchRegistry: true
    #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://eureka01:50101/eureka/,http://eureka02:50102/eureka/}
  instance:
    #将自己的ip地址注册到Eureka服务中
    prefer-ip-address: true
    ip-address: ${IP_ADDRESS:127.0.0.1}
    #指定实例id
    instance-id: ${spring.application.name}:${server.port}

ribbon:
  #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetries: 2
  #切换实例的重试次数
  MaxAutoRetriesNextServer: 3
  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作 没有实现幂等的情况下是很危险的,所以设置为false
  OkToRetryOnAllOperations: false
  #请求连接的超时时间
  ConnectTimeout: 5000
  #请求处理的超时时间
  ReadTimeout: 6000

logging:
  config: classpath:logback-spring.xml